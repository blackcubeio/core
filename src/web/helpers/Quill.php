<?php
/**
 * Quill.php
 *
 * PHP version 7.4+
 *
 * @author Philippe Gaultier <pgaultier@redcat.io>
 * @copyright 2010-2022 Redcat
 * @license https://www.redcat.io/license license
 * @version XXX
 * @link https://www.redcat.io
 * @package blackcube\core\web\helpers
 */
namespace blackcube\core\web\helpers;


/**
 * This is class allow html generated by quill to be cleaned up
 *
 * @author Philippe Gaultier <pgaultier@redcat.io>
 * @copyright 2010-2022 Redcat
 * @license https://www.redcat.io/license license
 * @version XXX
 * @link https://www.redcat.io
 * @package blackcube\core\web\helpers
 * @since XXX
 */
class Quill
{
    /**
     * @param string|null $htmlContent
     * @param array $keepTags list of tags to keep default to ['p'] needed for aria
     * @return string|null
     */
    public static function toRaw($htmlContent, $keepTags = ['p'])
    {
        if ($htmlContent !== null) {
            $cleanHtml = self::cleanHtml($htmlContent);
            $cleanHtml = strip_tags($cleanHtml, $keepTags);
            return $cleanHtml;
        } else {
            return $htmlContent;
        }
    }

    /**
     * Remove style in tags, empty tags, span tags
     *
     * @param string|null $htmlContent
     * @param bool $removeStyles remove styling
     * @param bool $removeEmptyTags remove empty tags
     * @param bool $removeSpan remove spans but keep content
     * @return string|null
     */
    public static function cleanHtml($htmlContent, $removeStyles = true, $removeEmptyTags = true, $removeSpan = true)
    {
        if ($htmlContent !== null) {
            $cleanHtml = $htmlContent;
            if ($removeStyles === true) {
                $cleanHtml = preg_replace('/style="([^"])*"/', '', $cleanHtml);
            }
            if ($removeEmptyTags === true) {
                $cleanHtml = preg_replace('/<([\S]+)([^>]*)>[\s|&nbsp;]*<\/\1>/', '', $cleanHtml);
            }
            if ($removeSpan === true) {
                $cleanHtml = preg_replace('/<span[^>]*>([^<]*)<\/span>/', '${1}', $cleanHtml);
            }
            return $cleanHtml;
        } else {
            return $htmlContent;
        }

    }
}